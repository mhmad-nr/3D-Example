/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 src/assets/models/small-village/simple_bird.glb -o src/pages/SmallVillage/BirdModel.tsx -t 
*/

import * as THREE from 'three'
import { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Bird1_Model001: THREE.SkinnedMesh
    Root_Jnt: THREE.Bone
  }
  materials: {
    Simplistic_Nature_Material: THREE.MeshStandardMaterial
  }
}

// type ActionName = 'Take 001'
// type GLTFActions = Record<ActionName, THREE.AnimationAction>

// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

export function BirdModel(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF('src/assets/models/small-village/simple_bird.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    if (actions["Take 001"]) {
      actions["Take 001"].reset().fadeIn(0.5).play();
    }
    // return () => actions["Take 001"].fadeOut(0.5);
  }, []);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Bird1_Model">
          <group name="Bones_and_Cons">
            <group name="Global_Con">
              <group name="Root_Con">
                <group name="Head_Con" position={[0, -0.056, -0.008]} rotation={[0.149, 0, 0]} />
                <group name="L_Wing_Con1" position={[-0.022, -0.029, 0]} rotation={[0, 0, -0.153]}>
                  <group name="L_Wing_Con2" />
                </group>
                <group name="R_Wing_Con1" position={[0.027, -0.034, 0]} rotation={[0, 0, 0.183]}>
                  <group name="R_Wing_Con2" />
                </group>
                <group name="Tail_Con" />
              </group>
            </group>
            <primitive object={nodes.Root_Jnt} />
            <skinnedMesh receiveShadow castShadow name="Bird1_Model001" geometry={nodes.Bird1_Model001.geometry} material={materials.Simplistic_Nature_Material} skeleton={nodes.Bird1_Model001.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('src/assets/models/small-village/simple_bird.glb')
